// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Appylar
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import Appylar
import Foundation
import SafariServices
import Swift
import SystemConfiguration
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class InterstitialViewController : UIKit.UIViewController, WebKit.WKNavigationDelegate, WebKit.WKUIDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) public static func onViewAppear(currentOrientation: UIKit.UIDeviceOrientation) -> UIKit.UIInterfaceOrientationMask
  @_Concurrency.MainActor(unsafe) public static func onViewDisappear() -> UIKit.UIInterfaceOrientationMask
  @_Concurrency.MainActor(unsafe) public static func canShowAd() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func canShowAdFromUnity()
  @_Concurrency.MainActor(unsafe) public func showAd(placement: Swift.String? = nil)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension Appylar.InterstitialViewController : WebKit.WKScriptMessageHandler, SafariServices.SFSafariViewControllerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic open func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func webView(_ webView: WebKit.WKWebView, createWebViewWith configuration: WebKit.WKWebViewConfiguration, for navigationAction: WebKit.WKNavigationAction, windowFeatures: WebKit.WKWindowFeatures) -> WebKit.WKWebView?
}
@objc @_inheritsConvenienceInitializers public class Advertisement : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@_cdecl("initialize")
public func initialize(appkey: Swift.UnsafePointer<Swift.CChar>, adTypes: Swift.UnsafePointer<Swift.CChar>, testMode: Swift.Bool)
@_cdecl("setParametersJSON")
public func setParametersJSON(dict: Swift.UnsafePointer<Swift.CChar>)
@_cdecl("canShowAdInterstitial")
public func canShowAdInterstitial()
@_cdecl("canShowAdBanner")
public func canShowAdBanner()
@_cdecl("showTopBanner")
public func showTopBanner()
@_cdecl("showBottomBanner")
public func showBottomBanner()
@_cdecl("showInterstitial")
public func showInterstitial()
@_cdecl("hideInterstitial")
public func hideInterstitial()
@_cdecl("hideBanner")
public func hideBanner()
@_cdecl("setOnInitialized")
public func setOnInitialized(delegate: @convention(c) () -> Swift.Void)
@_cdecl("setOnError")
public func setOnError(delegate: @convention(c) (Swift.UnsafePointer<Swift.CChar>) -> Swift.Void)
@_cdecl("canShowBannerAds")
public func canShowBannerAds(delegate: @convention(c) (Swift.Bool) -> Swift.Void)
@_cdecl("canShowInterstitialAds")
public func canShowInterstitialAds(delegate: @convention(c) (Swift.Bool) -> Swift.Void)
@_cdecl("setOnNoBanner")
public func setOnNoBanner(delegate: @convention(c) () -> Swift.Void)
@_cdecl("setOnBannerShown")
public func setOnBannerShown(delegate: @convention(c) (Swift.Int) -> Swift.Void)
@_cdecl("setOnNoInterstitial")
public func setOnNoInterstitial(delegate: @convention(c) () -> Swift.Void)
@_cdecl("setOnInterstitialClosed")
public func setOnInterstitialClosed(delegate: @convention(c) () -> Swift.Void)
@_cdecl("setOnInterstitialShown")
public func setOnInterstitialShown(delegate: @convention(c) () -> Swift.Void)
@_hasMissingDesignatedInitializers public class AppylarManager {
  public static var supportedOrientation: UIKit.UIInterfaceOrientationMask
  public static func setEventListener(delegate: Appylar.AppylarDelegate, bannerDelegate: Appylar.BannerViewDelegate, interstitialDelegate: Appylar.InterstitialDelegate)
  public static func Init(appKey: Swift.String, adTypes: [Appylar.AdType], testMode: Swift.Bool)
  public static func setParameters(dict: [Swift.String : [Swift.String]?])
  @objc deinit
}
public enum AdOrientation : Swift.String {
  case portrait
  case landscape
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class Session {
  public static var adTypes: [Appylar.AdType]
  public static var orientations: [Appylar.AdOrientation]
  public static var printLog: Swift.Bool
  public static var isInterstitialShown: Swift.Bool
  @objc deinit
}
public enum AdType : Swift.String {
  case banner
  case interstitial
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class UnityHelper {
  public static func showTopBanner()
  public static func showBottomBanner()
  public static func showInterstitial()
  public static func hideInterstitial()
  public static func hideBanner()
  public static func showAlert(vc: UIKit.UIViewController, sender: Any?)
  @objc deinit
}
extension Appylar.UnityHelper {
  public static var onInitialized: (() -> Swift.Void)?
  public static var onError: ((Swift.UnsafePointer<Swift.CChar>) -> Swift.Void)?
  public static var onNoBanner: (() -> Swift.Void)?
  public static var onBannerShown: ((Swift.Int) -> Swift.Void)?
  public static var onNoInterstitial: (() -> Swift.Void)?
  public static var onInterstitialClosed: (() -> Swift.Void)?
  public static var onInterstitialShown: (() -> Swift.Void)?
  public static var canShowBannerAds: ((Swift.Bool) -> Swift.Void)?
  public static var canShowInterstitialAds: ((Swift.Bool) -> Swift.Void)?
}
public protocol AppylarDelegate {
  func onInitialized()
  func onError(error: Swift.String)
}
public protocol BannerViewDelegate {
  func onNoBanner()
  func onBannerShown(_ height: Swift.Int)
}
public protocol InterstitialDelegate {
  func onNoInterstitial()
  func onInterstitialShown()
  func onInterstitialClosed()
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class BannerView : UIKit.UIView, SafariServices.SFSafariViewControllerDelegate {
  @_Concurrency.MainActor(unsafe) public func canShowAd() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func canShowAdFromUnity()
  @_Concurrency.MainActor(unsafe) public func showAd(placement: Swift.String? = nil)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didMoveToSuperview()
  @_Concurrency.MainActor(unsafe) public func hideAd()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension Appylar.BannerView : WebKit.WKUIDelegate, WebKit.WKNavigationDelegate, WebKit.WKScriptMessageHandler {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func webView(_ webView: WebKit.WKWebView, createWebViewWith configuration: WebKit.WKWebViewConfiguration, for navigationAction: WebKit.WKNavigationAction, windowFeatures: WebKit.WKWindowFeatures) -> WebKit.WKWebView?
}
extension Appylar.AdOrientation : Swift.Equatable {}
extension Appylar.AdOrientation : Swift.Hashable {}
extension Appylar.AdOrientation : Swift.RawRepresentable {}
extension Appylar.AdType : Swift.Equatable {}
extension Appylar.AdType : Swift.Hashable {}
extension Appylar.AdType : Swift.RawRepresentable {}
